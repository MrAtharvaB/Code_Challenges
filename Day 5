class Solution {
    public ArrayList<Integer> longestSubarray(int[] arr, int x) {
        int n = arr.length;
        int maxLen = 0;
        int bestStart = 0;
        int bestEnd = 0;
        
        for (int i = 0; i < n; i++) {
            int minVal = arr[i];
            int maxVal = arr[i];
            
            for (int j = i; j < n; j++) {
                minVal = Math.min(minVal, arr[j]);
                maxVal = Math.max(maxVal, arr[j]);
                
                if (maxVal - minVal <= x) {
                    if (j - i + 1 > maxLen) {
                        maxLen = j - i + 1;
                        bestStart = i;
                        bestEnd = j;
                    }
                } else {
                    break;
                }
            }
        }
        
        ArrayList<Integer> result = new ArrayList<>();
        for (int i = bestStart; i <= bestEnd; i++) {
            result.add(arr[i]);
        }
        
        return result;
    }
}
